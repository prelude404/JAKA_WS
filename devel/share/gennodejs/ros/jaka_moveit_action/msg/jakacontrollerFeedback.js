// Auto-generated. Do not edit!

// (in-package jaka_moveit_action.msg)


"use strict";

const _serializer = _ros_msg_utils.Serialize;
const _arraySerializer = _serializer.Array;
const _deserializer = _ros_msg_utils.Deserialize;
const _arrayDeserializer = _deserializer.Array;
const _finder = _ros_msg_utils.Find;
const _getByteLength = _ros_msg_utils.getByteLength;

//-----------------------------------------------------------

class jakacontrollerFeedback {
  constructor(initObj={}) {
    if (initObj === null) {
      // initObj === null is a special case for deserialization where we don't initialize fields
      this.point_num = null;
      this.robot_now = null;
    }
    else {
      if (initObj.hasOwnProperty('point_num')) {
        this.point_num = initObj.point_num
      }
      else {
        this.point_num = 0;
      }
      if (initObj.hasOwnProperty('robot_now')) {
        this.robot_now = initObj.robot_now
      }
      else {
        this.robot_now = [];
      }
    }
  }

  static serialize(obj, buffer, bufferOffset) {
    // Serializes a message object of type jakacontrollerFeedback
    // Serialize message field [point_num]
    bufferOffset = _serializer.int16(obj.point_num, buffer, bufferOffset);
    // Serialize message field [robot_now]
    bufferOffset = _arraySerializer.float32(obj.robot_now, buffer, bufferOffset, null);
    return bufferOffset;
  }

  static deserialize(buffer, bufferOffset=[0]) {
    //deserializes a message object of type jakacontrollerFeedback
    let len;
    let data = new jakacontrollerFeedback(null);
    // Deserialize message field [point_num]
    data.point_num = _deserializer.int16(buffer, bufferOffset);
    // Deserialize message field [robot_now]
    data.robot_now = _arrayDeserializer.float32(buffer, bufferOffset, null)
    return data;
  }

  static getMessageSize(object) {
    let length = 0;
    length += 4 * object.robot_now.length;
    return length + 6;
  }

  static datatype() {
    // Returns string type for a message object
    return 'jaka_moveit_action/jakacontrollerFeedback';
  }

  static md5sum() {
    //Returns md5sum for a message object
    return '899863511fa6ada8261fac222bf72461';
  }

  static messageDefinition() {
    // Returns full string definition for message
    return `
    # ====== DO NOT MODIFY! AUTOGENERATED FROM AN ACTION DEFINITION ======
    # Define a feedback message
    int16 point_num
    float32[] robot_now
    
    
    `;
  }

  static Resolve(msg) {
    // deep-construct a valid message object instance of whatever was passed in
    if (typeof msg !== 'object' || msg === null) {
      msg = {};
    }
    const resolved = new jakacontrollerFeedback(null);
    if (msg.point_num !== undefined) {
      resolved.point_num = msg.point_num;
    }
    else {
      resolved.point_num = 0
    }

    if (msg.robot_now !== undefined) {
      resolved.robot_now = msg.robot_now;
    }
    else {
      resolved.robot_now = []
    }

    return resolved;
    }
};

module.exports = jakacontrollerFeedback;
